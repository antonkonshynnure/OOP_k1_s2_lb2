#include <iostream>
using namespace std;
class Vector
{
private:
    int x;
    int y;
    int z;
 public:
    Vector(int, int, int);
    Vector();
    Vector(Vector&);
    void Print() const;
    void Input();
    Vector Plus(Vector);
    Vector Minus(Vector);
    Vector Multiply_const(const int);
    double Modul();
    double Skul_multiply(Vector);
    bool Equal(Vector) const;
    int getX();
    int getY();
    int getZ();
    void setX(int);
    void setY(int);
    void setZ(int);
    Vector(int);
};
Vector::Vector(int p1)
{
    x = p1;
    y = p1;
    z = p1;
}
int Vector::getX()
{
    return x;
}
int Vector::getY()
{
    return y;
}
int Vector::getZ()
{
    return z;
}
void Vector::setX(int x)
{
    this->x = x;
}
void Vector::setY(int y)
{
    this->y = y;
}
void Vector::setZ(int z)
{
    this->z = z;
}
Vector::Vector(int p1, int p2, int p3)
{
    x = p1;
    y = p2;
    z = p3;
}
Vector::Vector()
{
    x = 0;
    y = 0;
    z = 0;
}
Vector::Vector(Vector& v)
{
    x = v.x;
    y = v.y;
    z = v.z;
}
void Vector::Print() const
{
    cout << "(" << x << "," << y << "," << z << ")" << endl;
}
void Vector::Input()
{
    cin >> x >> y >> z;
}
Vector Vector::Plus(Vector v2)
{
    Vector v;
    v.x = x + v2.x;
    v.y = y + v2.y;
    v.z = z + v2.z;
    return v;
}
Vector Vector::Minus(Vector v2)
{
    Vector v;
    v.x = x - v2.x;
    v.y = y - v2.y;
    v.z = z - v2.z;
    return v;
}
Vector Vector::Multiply_const(const int a)
{
    Vector v;
    v.x = x * a;
    v.y = y * a;
    v.z = z * a;
    return v;
}
double Vector::Modul()
{
    Vector v;
    int modul = 0;
    modul = sqrt(pow(v.x, 2) + pow(v.y, 2) + pow(v.z, 2));
    return modul;
}
double Vector::Skul_multiply(Vector v2)
{
    Vector v;
    int skul_multiply = v.x * v2.x + v.y * v2.y + v.z * v2.z;
    return skul_multiply;
}
bool Vector::Equal(Vector v2) const
{
    if (x == v2.x && y == v2.y && z == v2.z)
        return true;
    else
        return false;
}
int main()
{
    Vector v1(1, 2, 3), v2, v3(2, 3, 6), v4(v1), v5;
    v1.Print();
    v3.Print();
    v4.Print();
    v2.Input();
    v2.Print();
    v1.Plus(v2);
    v1.Print();
    v2 = v3.Minus(v4);
    v2.Print();
    v5 = v4.Multiply_const(7);
    v5.Print();
    v1.Modul();
    v1.Print();
    v3.Skul_multiply(v3);
    v3.Print();
    cout << v1.Equal(v5);
}
